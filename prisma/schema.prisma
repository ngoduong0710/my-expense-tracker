generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String       @id @default(uuid())
  email      String       @unique
  name       String?
  createdAt  DateTime     @default(now()) @map("created_at")

  // Relations
  transactions Transaction[]
  categories   Category[]
  budgets      Budget[]

  @@map("users")
}

model Transaction {
  id          String    @id @default(uuid())
  userId      String    @map("user_id")
  amount      Float
  type        TransactionType  // Sử dụng enum thay vì String
  categoryId  String    @map("category_id")
  description String?
  date        DateTime
  createdAt   DateTime  @default(now()) @map("created_at")

  // Relations
  user        User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  category    Category  @relation(fields: [categoryId], references: [id], onDelete: Cascade)

  @@map("transactions")
}

enum TransactionType {
  income
  expense
}

model Category {
  id          String    @id @default(uuid())
  userId      String?   @map("user_id")  // null if it's a default category
  name        String
  type        String    // "income" or "expense"
  color       String    // hex color code
  icon        String?   // optional icon name

  // Relations
  user        User?     @relation(fields: [userId], references: [id], onDelete: Cascade)
  transactions Transaction[]
  budgets     Budget[]

  @@map("categories")
}

model Budget {
  id          String    @id @default(uuid())
  userId      String    @map("user_id")
  categoryId  String    @map("category_id")
  amount      Float
  month       Int
  year        Int
  createdAt   DateTime  @default(now()) @map("created_at")

  // Relations
  user        User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  category    Category  @relation(fields: [categoryId], references: [id], onDelete: Cascade)

  @@unique([userId, categoryId, month, year])
  @@map("budgets")
}
